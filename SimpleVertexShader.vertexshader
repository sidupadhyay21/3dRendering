#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition;
layout(location = 1) in vec3 vertexColor;
layout(location = 2) in vec3 vertexNormal;
out vec3 fragmentColor;
out vec3 fragmentPos;
out vec3 normal;
uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

void main(){
    gl_Position = projection * view * model * vec4(vertexPosition, 1.0);
    mat3 normalMatrix = mat3(model);
    normalMatrix = inverse(normalMatrix);
    normalMatrix = transpose(normalMatrix);
    normal = normalize(vertexNormal * normalMatrix);
    fragmentColor = vertexColor;
    fragmentPos = vertexPosition * normalMatrix;
}

