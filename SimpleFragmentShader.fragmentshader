#version 330 core

// Ouput data
in vec3 fragmentColor;
in vec3 normal;
in vec3 fragmentPos;
out vec4 color;
uniform vec3 lightPos;

void main(){
	vec3 lightColor = vec3(1.0f, 1.0f, 1.0f);
	vec3 ambient = 0.3f * lightColor;
	vec3 norm = normalize(normal);
	vec3 lightDir = normalize(lightPos - fragmentPos);
	float diff = dot(norm, lightDir);
	diff = max(diff, 0.0);
	vec3 diffuse = diff * lightColor;
	vec3 result = (ambient + diffuse) * fragmentColor;
	color = vec4(result, 1.0);
}